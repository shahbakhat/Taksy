# Generated by Django 4.2.1 on 2023-10-10 12:20

import core.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('TAXIPASSENGER', 'Taxi Passenger'), ('TAXIDRIVER', 'Taxi Driver')], default='OTHER', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='driver', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=core.models.driver_image_upload)),
                ('phone_number', models.CharField(blank=True, default='', max_length=50)),
                ('nta_badge_number', models.CharField(default='N1234', max_length=6)),
                ('vehicle_reg', models.CharField(default='', max_length=100)),
                ('date_of_birth', models.DateTimeField(default=django.utils.timezone.now)),
                ('spsv_license_expirations', models.DateTimeField(default=django.utils.timezone.now)),
                ('roof_sign_number', models.CharField(default='', max_length=10)),
                ('roof_sign_license_expiry', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle_license_disc', models.ImageField(default='', upload_to=core.models.driver_image_upload)),
                ('spsv_license', models.ImageField(default='', upload_to=core.models.driver_image_upload)),
                ('driving_license_number', models.CharField(default='', max_length=200)),
                ('driving_license', models.ImageField(default='', upload_to=core.models.driver_image_upload)),
                ('is_verified', models.BooleanField(default=False)),
                ('vehicle_make_and_model', models.CharField(default='', max_length=255)),
                ('vehicle_type', models.CharField(choices=[('electric', 'Electric'), ('hybrid', 'Hybrid'), ('petrol', 'Petrol'), ('diesel', 'Diesel')], default='electric', max_length=255)),
                ('driver_trip_status', models.CharField(choices=[('no trips', 'No trips'), ('accepted', 'Trip has been accepted'), ('cancelled', 'Trip has been cancelled'), ('onboard', 'Passenger Onboard'), ('no trips', 'No trips')], default='no trips', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='passenger', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=core.models.passenger_image_upload)),
                ('phone_number', models.CharField(blank=True, max_length=50)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=225)),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=225)),
                ('stripe_card_last4', models.CharField(blank=True, max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='TaxiDriver',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TaxiPassenger',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Taxi',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('taxi_passenger_phone_number', models.CharField(default='', max_length=50)),
                ('taxi_size', models.CharField(choices=[('5 Seater', '5 Seater'), ('7 Seater', '7 Seater'), ('8 Seater', '8 Seater')], default='5 Seater', max_length=10)),
                ('pickup_address', models.CharField(default=None, max_length=255)),
                ('dropoff_address', models.CharField(default=None, max_length=255)),
                ('pickup_lng', models.DecimalField(decimal_places=6, default=0.0, max_digits=9, null=True)),
                ('pickup_lat', models.DecimalField(decimal_places=6, default=0.0, max_digits=9, null=True)),
                ('dropoff_lng', models.DecimalField(decimal_places=6, default=0.0, max_digits=9, null=True)),
                ('dropoff_lat', models.DecimalField(decimal_places=6, default=0.0, max_digits=9, null=True)),
                ('trip_price', models.FloatField(default=0, null=True)),
                ('taxi_booking_status', models.CharField(choices=[('booking in progress', 'Booking in progress'), ('arrived', 'Arrived'), ('booked', 'Booked'), ('onboard', 'Onboard'), ('cancelled', 'Cancelled'), ('complete', 'Completed')], max_length=100)),
                ('trip_distance', models.DecimalField(decimal_places=2, default=0, max_digits=9, null=True)),
                ('description', models.CharField(default='', max_length=500, null=True)),
                ('trip_fare', models.FloatField(default=0)),
                ('duration', models.IntegerField(default=0)),
                ('pickup_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('trip_distance_covered', models.CharField(blank=True, default='', max_length=255)),
                ('booking_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('cancellation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.driver')),
                ('taxi_passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.passenger')),
            ],
        ),
        migrations.CreateModel(
            name='MyTrips',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_taxi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.taxi')),
                ('booked_passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.passenger')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='accepted_trips',
            field=models.ManyToManyField(blank=True, related_name='booked', to='core.taxi'),
        ),
        migrations.AddField(
            model_name='driver',
            name='cancelled_trips',
            field=models.ManyToManyField(blank=True, related_name='cancelled', to='core.taxi'),
        ),
        migrations.AddField(
            model_name='driver',
            name='completed_trips',
            field=models.ManyToManyField(blank=True, related_name='completed', to='core.taxi'),
        ),
        migrations.AddField(
            model_name='driver',
            name='trips_distance_covered',
            field=models.ManyToManyField(default='', related_name='trips_distance_covered', to='core.taxi'),
        ),
    ]
